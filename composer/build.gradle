apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

mainClassName = 'com.gojuno.composer.MainKt'

dependencies {
    compile libraries.kotlinStd
    compile libraries.rxJava
    compile libraries.jCommander
    compile libraries.commanderOs
    compile libraries.commanderAndroid
    compile libraries.apacheCommonsIo
    compile libraries.apacheCommonsLang
    compile libraries.gson
}

dependencies {
    testCompile libraries.spek
    testCompile libraries.spekSubjectExtension
    testCompile libraries.spekJunitPlatformEngine
    testCompile libraries.assertJ
}

jar {
    // Build jar with dependencies.
    from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }

    manifest {
        attributes('Main-Class': mainClassName)
    }
}

junitPlatform {
    platformVersion = versions.junitPlatform

    filters {
        engines {
            include 'spek'
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task validatePublishing {
    doLast {
        validateTagAndVersion()
    }
}

bintrayUpload.dependsOn validatePublishing

def pomConfig = {
    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'gojuno'
            name 'Juno Inc.'
            email 'opensource@gojuno.com'
        }
    }
}

publishing {
    publications {
        ComposerPublication(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            groupId 'com.gojuno.composer'
            artifactId 'composer'
            version projectVersion()

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Reactive Android Instrumentation Test Runner.')
                root.appendNode('name', 'Composer')
                root.appendNode('url', 'https://github.com/gojuno/composer')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publish = true

    pkg {
        repo = 'maven'
        name = 'composer'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/gojuno/composer.git'
        issueTrackerUrl = 'https://github.com/gojuno/composer/issues'
        publications = ['ComposerPublication']

        version {
            name = projectVersion()
            vcsTag = gitTag()
            
            gpg {
                sign = true
                passphrase = System.getenv('BINTRAY_GPG_PASSPHRASE')
            }
        }
    }
}
