apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

mainClassName = 'com.gojuno.composer.MainKt'

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    api "com.gojuno.commander:android:0.2.0"
    api "com.beust:jcommander:1.71"
    api "commons-io:commons-io:2.6"
    api "org.apache.commons:commons-text:1.6"
    api "com.google.code.gson:gson:2.8.5"
    api "com.linkedin.dextestparser:parser:1.1.0"

    testImplementation "org.assertj:assertj-core:3.11.1"
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:2.0.5"
    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:2.0.5"
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect"
}

jar {
    // Build jar with dependencies.
    from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }

    manifest {
        attributes('Main-Class': mainClassName)
    }
}

test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

task validatePublishing {
    doLast {
        validateTagAndVersion()
    }
}

bintrayUpload.dependsOn validatePublishing

publishing {
    publications {
        ComposerPublication(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {
                description ='Reactive Android Instrumentation Test Runner.'
                url ='https://github.com/gojuno/composer'
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'gojuno'
                        name = 'Juno Inc.'
                        email = 'opensource@gojuno.com'
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publish = true

    pkg {
        repo = 'maven'
        name = 'composer'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/gojuno/composer.git'
        issueTrackerUrl = 'https://github.com/gojuno/composer/issues'
        publications = ['ComposerPublication']

        version {
            name = project.version
            vcsTag = gitTag()
            
            gpg {
                sign = true
                passphrase = System.getenv('BINTRAY_GPG_PASSPHRASE')
            }
        }
    }
}
